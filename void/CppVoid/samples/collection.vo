class Collection <- (items)
Collection.each <- (callback) {
    (item in self.items)
        @item ->> callback -> (item)
    return self
}
Collection.map <- (callback) {
    i <- 0
    (i < len -> (items)) :: {
        self.items[i] <- callback -> (self.items[i])
        i <- i + 1
    }
    return self
}

data <- Collection -> ([1, 2, 3, 4, 5])
# data.map(function (item) { return item * 2 }).each(function (item) { console.log(item) })
data.map -> ((item) -> item * 2).each -> ((item) => {
    print -> (item)
})
print -> (data.items)